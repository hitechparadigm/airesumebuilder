AWSTemplateFormatVersion: '2010-09-09'
Description: Backend Infrastructure for Resume Generator Application

Parameters:
  BackendS3BucketName:
    Type: String
    Description: "Name of the S3 bucket for storing backend data."

  LambdaFunctionName:
    Type: String
    Default: "AIResumeGeneratorLambda"
    Description: "Name for the Lambda function to generate resumes."

  DynamoDBTableName:
    Type: String
    Default: "AIResumeBuilderUserProfiles"
    Description: "DynamoDB table for storing user profiles and job applications."

  ApiGatewayName:
    Type: String
    Default: "AIResumeGeneratorAPI"
    Description: "API Gateway for the Resume and Cover Letter Generator API."

  RDSInstanceIdentifier:
    Type: String
    Default: "AIResumeAppDB"
    Description: "Identifier for the RDS database."

  CodeBucket:
    Type: String
    Default: "ai-resume-builder-app-lambda"
    Description: "S3 bucket where Lambda function code is stored."

  CodeKey:
    Type: String
    Default: "lambda-code.zip"
    Description: "The key for the Lambda function code file in S3."

Resources:
  # S3 Bucket for Backend Data Storage
  BackendDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BackendS3BucketName
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Status: Enabled
            ExpirationInDays: 365  # Optional: Adjust for your data retention needs
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true

  # DynamoDB Table for User Profiles
  UserProfilesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref DynamoDBTableName
      AttributeDefinitions:
        - AttributeName: UserId
          AttributeType: S
      KeySchema:
        - AttributeName: UserId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  # Lambda function to handle resume generation
  ResumeGeneratorLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref LambdaFunctionName
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref CodeBucket
        S3Key: !Ref CodeKey
      Runtime: python3.8
      Timeout: 10
      MemorySize: 256
      Environment:
        Variables:
          BACKEND_S3_BUCKET: !Ref BackendS3BucketName
          DYNAMO_TABLE_NAME: !Ref DynamoDBTableName

  # IAM Role for Lambda Execution
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - !Sub "arn:aws:s3:::${BackendS3BucketName}"
                  - !Sub "arn:aws:s3:::${BackendS3BucketName}/*"
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                Resource: !GetAtt UserProfilesTable.Arn
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  # API Gateway for managing API requests
  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Ref ApiGatewayName
      Description: "API Gateway for Resume Generator Application"

  # API Gateway deployment configuration
  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId: !Ref ApiGateway
      StageName: prod

Outputs:
  BackendS3BucketName:
    Description: "S3 bucket for backend data storage"
    Value: !Ref BackendDataBucket

  DynamoDBTableName:
    Description: "DynamoDB table for user profiles"
    Value: !Ref UserProfilesTable

  ApiGatewayUrl:
    Description: "API Gateway URL for Resume Generator Application"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod"
