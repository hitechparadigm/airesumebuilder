AWSTemplateFormatVersion: '2010-09-09'
Description: Backend Infrastructure for Resume Generator Application

Parameters:
  S3BucketName:
    Type: String
  LambdaFunctionName:
    Type: String
  DynamoDBTableName:
    Type: String
  ApiGatewayName:
    Type: String
  RDSInstanceIdentifier:
    Type: String
  CodeBucket:
    Type: String
  CodeKey:
    Type: String

Resources:
  # S3 Bucket for storing user-uploaded resumes and generated documents
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketName # S3 bucket name provided in parameters.yaml.
      VersioningConfiguration:
        Status: Enabled

  # DynamoDB Table for user profiles and job application history
  UserProfilesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref DynamoDBTableName # DynamoDB table name provided in parameters.yaml.
      AttributeDefinitions:
        - AttributeName: UserId
          AttributeType: S
      KeySchema:
        - AttributeName: UserId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  # Lambda function to handle application logic
  ResumeGeneratorLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref LambdaFunctionName # Lambda function name provided in parameters.yaml.
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref CodeBucket # Lambda code bucket provided in parameters.yaml.
        S3Key: !Ref CodeKey       # Lambda code key (file name) provided in parameters.yaml.
      Runtime: python3.8
      Timeout: 10
      MemorySize: 256
      Environment:
        Variables:
          S3_BUCKET_NAME: !Ref S3BucketName
          DYNAMO_TABLE_NAME: !Ref DynamoDBTableName

  # Lambda Execution Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Sub "arn:aws:s3:::${S3BucketName}/*"
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                Resource: !GetAtt UserProfilesTable.Arn
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  # API Gateway for managing API requests
  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Ref ApiGatewayName # API Gateway name provided in parameters.yaml.

Outputs:
  S3BucketName:
    Description: "S3 bucket name for document storage"
    Value: !Ref S3Bucket
  DynamoDBTableName:
    Description: "DynamoDB table for user profiles"
    Value: !Ref UserProfilesTable
  ApiGatewayUrl:
    Description: "API Gateway URL for Resume Generator Application"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod"
